

django-admin startproject swdevstackcore

django-admin startapp users
django-admin startapp projects
django-admin startapp assets
django-admin startapp activities
django-admin startapp metrics
django-admin startapp resources
django-admin startapp standards
django-admin startapp users

pip install django-simple-history
simple_history.middleware.HistoryRequestMiddleware
registro la app en settings
registro el middleware en settings
configuro la variable AUTH_USER_MODEL apuntando a mi modelo customizado
registro la visual en el archivo admin de mi nueva app users

==> 
Realizo mi primera migracion ---> py manage.py makemigrations
ERROR -----> HINT: Get Pillow at https://pypi.org/project/Pillow/ or run command "python -m pip install Pillow".←[0m
No permite hacer la migracion porque dentro del modelo hay un campo imagen que necesita la libreria pillow
python -m pip install Pillow
reintento la migracion ---> py manage.py makemigrations 
Migracion exitosa se creo el modelo User y el modelo HistoricalUser

==> Como quiero que ahora se ahga la migraicon en mi bd de postgresql, creo la base de datos.
voy a postgresql y creo la base datos llamada devstackdb
actualizo los datos en local.py para que apunte a la base de datos correcta y ya no a la de sqlite
debo instalar https://pypi.org/project/psycopg2-binary/
pip install psycopg2-binary (Version instalada 2.9.3)
ejecuto py manage.py migrate y corren las migraciones con normalidad, se aplican y en postgresql aparecen las tablas.
    DB_HOST='localhost' 
    DB_PORT='5432'
    DB_USER='postgres' 
    DB_PWD='Nandop*963'
    DB_NAME='devstackdb' 
    ***
    DB_NAME_SERVER='serverpostgresql' 
    DB_PASS_SERVER='Nandop*963'

=> Creacion del super usuario
py manage.py createsuperuser
Se me presenta error KEY:'NAME' y se soluciona corrigiendo el espacio en settings
creo el super ususario:
    DevStudent
    devstackproject@gmail.com
    DevStudents
    TeamDevstack
    team2281573

=> Realizo configuraciones de debuggueo


=> Proceso para primer serializer y api_views
en la app users, borro los archivos view y test, creo carpeta api y alli agrupare las urls, las vistas y los serializerz
creo primero el serializador, basico y sencillo con su clase meta y listo.
Creo luego mi primera vista, tipo APIView personalizada, con metodo get, con 3 pasos sencillos, queriset, serializer y response.
Creo mi prime enrutamiento tipo basico urlspatterns en urls.py
Conecto el eslabon de rutas creado a el urls.py principal, empezando a dar forma al arbol estructural.
corrijo errores de sintaxis e importaciones.
Inicio el servidor y reviso el http://127.0.0.1:8000/usuario/usuario/ las estrucuras de rooteo
Reviso la data en formato json con la opcion nativa de django rest framework = http://127.0.0.1:8000/usuario/usuario/?format=json
Todo ok y commit.

=> Refactorizacion de codigo y testeo en postman
Separacion de queryset
Mejoramiento de los reponse http
Comentarios en codigo
Testeo en postman de los metodos CRUD
.
..
.
.

..
.
.
.
.
.
.
.

..
.
.
.
.

.

django-admin startproject devstackcore . 
    settings
        base
        local
        production
    aswg
    yyyy
    rrrr

django-admin startapp users
    api
        urls
        views
        serializers
        model
    admin
    app
    test

django-admin startapp projects
    api
        urls
        views
        serializers
        model
    admin
    app
    test

django-admin startapp assets
    api
        urls
        views
        serializers
        model
    admin
    app
    test

django-admin startapp activities
    api
        urls
        views
        serializers
        model
    admin
    app
    test

django-admin startapp metrics
    api
        urls
        views
        serializers
        model
    admin
    app
    test

django-admin startapp resources
    api
        urls
        views
        serializers
        model
    admin
    app
    test

django-admin startapp standards
    api
        urls
        views
        serializers
        model
    admin
    app
    test